#!/usr/bin/env python3

from itertools import count, combinations, takewhile


def pentgen():
    for n in count(1):
        yield n*(3*n - 1) / 2


def euler044():
    """Pentagon Numbers
    Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
    The first ten pentagonal numbers are:

    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

    It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
    However, their difference, 70 − 22 = 48, is not pentagonal.

    Find the pair of pentagonal numbers, Pj and Pk, for which
    their sum and difference are pentagonal and D = |Pk − Pj|
    is minimised; what is the value of D?
    """
    all_pentagonals = set()
    generator = pentgen()
    ceil = 10
    while True:
        pentagonals = set(takewhile(lambda x: x <= ceil, generator))
        all_pentagonals.update(pentagonals)
        for Pj, Pk in combinations(pentagonals, 2):
            if ((Pj + Pk in all_pentagonals) and
                    (abs(Pj - Pk) in all_pentagonals)):
                return abs(Pj - Pk)
        ceil *= 10


if __name__ == "__main__":
    print(euler044())

