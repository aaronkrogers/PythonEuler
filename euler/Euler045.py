#!/usr/bin/env python3

from itertools import count


def is_pentagon(num):
    return (1+(1+24*num)**.5) % 6 == 0


def hexagons(start):
    for n in count(start):
        h = n * (2*n - 1)
        yield h


def euler045():
    """Triangular, Pentagonal, and Hexagonal
    Triangle, pentagonal, and hexagonal numbers
    are generated by the following formulae:

    Triangle:   Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
    Pentagonal: Pn=n(3n−1)/2	1, 5, 12, 22, 35, ...
    Hexagonal:	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
    It can be verified that T285 = P165 = H143 = 40755.

    Find the next triangle number that is also pentagonal and hexagonal.
    """

    # Starting with H144 (the next Hexagonal number
    # following the example)
    for hexagon in hexagons(144):
        if is_pentagon(hexagon):
            return hexagon


if __name__ == "__main__":
    print(euler045())